{"version":3,"file":"static/js/415.25343855.chunk.js","mappings":"wNAEaA,EAAOC,EAAAA,GAAAA,GAAH,6HAQJC,EAAOD,EAAAA,GAAAA,GAAH,kTAcJE,EAAQF,EAAAA,GAAAA,IAAH,uG,SCpBLG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,SAACT,EAAD,WACE,SAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,SAACH,EAAD,WACE,gBACEY,IACEL,EAAW,yCAC2BA,GAD3B,uDAEyCC,GAEtDK,IAAKL,SATFF,EADD,KAkBjB,C,0HCWD,UAhCa,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OACpBC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,IAAkBF,GAFzB,OAERjB,EAFQ,OAGda,EAAUb,EAAOoB,SAHH,mDAKK,kBAAf,KAAMC,KALI,mDAMdC,EAAAA,GAAAA,MAAY,8BANE,yDAAH,qDAYf,OAFAJ,IAEO,WACLH,EAAWQ,OACZ,CACF,GAAE,KAGD,6BACE,SAAC,KAAD,CAASC,SAAS,YAAYC,cAAc,KAC5C,4CACA,SAAC,IAAD,CAAYzB,OAAQA,MAGzB,C,mMCjCK0B,EAAW,+BACXC,EAAU,mCAEHR,EAAiB,mCAAG,WAAMF,GAAN,uFACRW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,GAC1C,CACEV,OAAAA,IAJ2B,cACzBY,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBC,EAAe,mCAAG,WAAOC,EAASf,GAAhB,uFACNW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,oBACmBL,GACxC,CACEV,OAAAA,IAJyB,cACvBY,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUfG,EAAW,mCAAG,WAAOC,EAAOjB,GAAd,uFACFW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeC,EADf,kBACgCO,GACrD,CACEjB,OAAAA,IAJqB,cACnBY,EADmB,yBAOlBA,EAASC,MAPS,2CAAH,wDAUXK,EAAe,mCAAG,WAAOH,EAASf,GAAhB,uFACNW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BAC2BL,GAChD,CACEV,OAAAA,IAJyB,cACvBY,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUfM,EAAe,mCAAG,WAAOJ,EAASf,GAAhB,uFACNW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BAC2BL,GAChD,CACEV,OAAAA,IAJyB,cACvBY,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,uD","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  transition: transform 500ms;\n  will-change: transform;\n  cursor: pointer;\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Thumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  width: 300px;\n  height: 450px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, Thumb } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Thumb>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://via.placeholder.com/300x450.png?text=${title}`\n                }\n                alt={title}\n              />\n            </Thumb>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getTrendingMovies } from 'services/api';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      try {\n        const movies = await getTrendingMovies(signal);\n        setMovies(movies.results);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n        toast.error('Oops, something went wrong');\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b60c32a6f6f2663f6a35c755ff35b4cc';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const searchMovie = async (query, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n"],"names":["List","styled","Item","Thumb","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","useState","setMovies","useEffect","controller","AbortController","signal","fetchData","getTrendingMovies","results","name","toast","abort","position","reverseOrder","BASE_URL","API_KEY","axios","response","data","getMovieDetails","movieId","searchMovie","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}