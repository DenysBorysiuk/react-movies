{"version":3,"file":"static/js/83.4b20c443.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  transition: transform 500ms;\n  will-change: transform;\n  cursor: pointer;\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Thumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  width: 300px;\n  height: 450px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, Thumb } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Thumb>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://via.placeholder.com/300x450.png?text=${title}`\n                }\n                alt={title}\n              />\n            </Thumb>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const FormWrap = styled.form`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 400px;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  border-radius: 3px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: transparent;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { FormWrap, Input, FormBtn } from './SearchBox.styled';\n\nexport const SearchBox = ({ updateQueryString }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    updateQueryString(form.elements.query.value);\n    form.reset();\n  };\n\n  return (\n    <FormWrap onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" placeholder=\"Search movie\" />\n      <FormBtn type=\"submit\">\n        <BsSearch size=\"1.5em\" />\n      </FormBtn>\n    </FormWrap>\n  );\n};\n\nSearchBox.propTypes = {\n  updateQueryString: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { searchMovie } from 'services/api';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      try {\n        const movies = await searchMovie(query, signal);\n        if (!movies.total_results) {\n          return toast.error('Enter correct query');\n        }\n\n        setMovies(movies.results);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n        toast.error('Oops, something went wrong');\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <SearchBox updateQueryString={updateQueryString} />\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b60c32a6f6f2663f6a35c755ff35b4cc';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const searchMovie = async (query, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n"],"names":["List","styled","Item","Thumb","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","FormWrap","Input","FormBtn","SearchBox","updateQueryString","onSubmit","e","preventDefault","form","currentTarget","elements","query","value","reset","type","name","placeholder","size","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","controller","AbortController","signal","fetchData","searchMovie","total_results","toast","results","abort","position","reverseOrder","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}