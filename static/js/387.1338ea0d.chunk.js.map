{"version":3,"file":"static/js/387.1338ea0d.chunk.js","mappings":"gSAEaA,EAAQC,EAAAA,GAAAA,GAAH,gDAILC,EAASD,EAAAA,GAAAA,EAAH,gDAINE,EAAWF,EAAAA,GAAAA,KAAH,6C,SCwCrB,EA5CgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OACpBC,EAAS,mCAAG,8GAEaC,EAAAA,EAAAA,IAAgBP,EAASK,GAFtC,OAERG,EAFQ,OAGdT,EAAWS,EAAaC,SAHV,mDAKK,kBAAf,KAAMC,KALI,mDAMdC,EAAAA,GAAAA,MAAY,8BANE,yDAAH,qDAYf,OAFAL,IAEO,WACLH,EAAWS,OACZ,CAjBmB,CAkBrB,GAAE,CAACZ,KAEU,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAS,GACvB,iCACE,SAAC,KAAD,CAASC,SAAS,YAAYC,cAAc,KAC5C,wBACGjB,EAAQkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAAC1B,EAAD,uBACU,SAACG,EAAD,UAAWsB,QAErB,SAACvB,EAAD,UAASwB,MAJFF,EADE,UAWjB,+DAEH,C,mMC9CKG,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,WAAMjB,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,GAC1C,CACEhB,OAAAA,IAJ2B,cACzBmB,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBC,EAAe,mCAAG,WAAO1B,EAASK,GAAhB,uFACNkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,oBACmBqB,GACxC,CACEhB,OAAAA,IAJyB,cACvBmB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUfE,EAAW,mCAAG,WAAOC,EAAOvB,GAAd,uFACFkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,GACrD,CACEvB,OAAAA,IAJqB,cACnBmB,EADmB,yBAOlBA,EAASC,MAPS,2CAAH,wDAUXI,EAAe,mCAAG,WAAO7B,EAASK,GAAhB,uFACNkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,GAChD,CACEhB,OAAAA,IAJyB,cACvBmB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUflB,EAAe,mCAAG,WAAOP,EAASK,GAAhB,uFACNkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,GAChD,CACEhB,OAAAA,IAJyB,cACvBmB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,uD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Review = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Nickname = styled.span`\n  color: orangered;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Title, Review, Nickname } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId, signal);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n        toast.error('Oops, something went wrong');\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return reviews?.length > 0 ? (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <Title>\n              Author: <Nickname>{author}</Nickname>\n            </Title>\n            <Review>{content}</Review>\n          </li>\n        ))}\n      </ul>\n    </>\n  ) : (\n    <p>We don`t have reviews for this movie</p>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b60c32a6f6f2663f6a35c755ff35b4cc';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const searchMovie = async (query, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n"],"names":["Title","styled","Review","Nickname","useState","reviews","setReviews","movieId","useParams","useEffect","controller","AbortController","signal","fetchData","getMovieReviews","movieReviews","results","name","toast","abort","length","position","reverseOrder","map","id","author","content","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getMovieDetails","searchMovie","query","getMovieCredits"],"sourceRoot":""}