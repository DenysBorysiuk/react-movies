{"version":3,"file":"static/js/736.6b6838e8.chunk.js","mappings":"4RAEaA,EAAOC,EAAAA,GAAAA,GAAH,4EAMJC,EAAOD,EAAAA,GAAAA,GAAH,6LAOJE,EAAQF,EAAAA,GAAAA,IAAH,uGAOLG,EAAUH,EAAAA,GAAAA,IAAH,0DAKPI,EAAQJ,EAAAA,GAAAA,GAAH,mEAKLK,EAAWL,EAAAA,GAAAA,EAAH,4C,mBC4BrB,EAtDa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OACpBC,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAgBP,EAASK,GAFjC,OAERG,EAFQ,OAGdT,EAAQS,EAAQV,MAHF,mDAKK,kBAAf,KAAMW,KALI,mDAMdC,EAAAA,GAAAA,MAAY,8BANE,yDAAH,qDAYf,OAFAJ,IAEO,WACLH,EAAWQ,OACZ,CAjBmB,CAkBrB,GAAE,CAACX,KAEO,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMc,QAAS,GACpB,iCACE,SAAC,KAAD,CAASC,SAAS,YAAYC,cAAc,KAC5C,SAACxB,EAAD,UACGQ,EAAKiB,KAAI,gBAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,KAAMQ,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACR,UAAC1B,EAAD,YACE,SAACC,EAAD,WACE,gBACE0B,IACED,EAAY,yCAC0BA,GAD1B,wDAIdE,IAAKX,OAGT,UAACf,EAAD,YACE,SAACC,EAAD,UAAQc,KACR,SAACb,EAAD,UAAWqB,SAbJD,EADH,UAqBd,4DAEH,C,mMCxDKK,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,WAAMlB,GAAN,uFACRmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,GAC1C,CACEjB,OAAAA,IAJ2B,cACzBoB,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBC,EAAe,mCAAG,WAAO3B,EAASK,GAAhB,uFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACArB,EADA,oBACmBsB,GACxC,CACEjB,OAAAA,IAJyB,cACvBoB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUfE,EAAW,mCAAG,WAAOC,EAAOxB,GAAd,uFACFmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,GACrD,CACExB,OAAAA,IAJqB,cACnBoB,EADmB,yBAOlBA,EAASC,MAPS,2CAAH,wDAUXnB,EAAe,mCAAG,WAAOP,EAASK,GAAhB,uFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACArB,EADA,4BAC2BsB,GAChD,CACEjB,OAAAA,IAJyB,cACvBoB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUfI,EAAe,mCAAG,WAAO9B,EAASK,GAAhB,uFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACArB,EADA,4BAC2BsB,GAChD,CACEjB,OAAAA,IAJyB,cACvBoB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,uD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-align: center;\n`;\n\nexport const Thumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  width: 150px;\n  height: 150px;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 4px;\n  width: 142px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 12px;\n  margin-bottom: 4px;\n`;\n\nexport const SubTitle = styled.p`\n  font-size: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport { List, Item, Thumb, Wrapper, Title, SubTitle } from './Cast.styled';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      try {\n        const credits = await getMovieCredits(movieId, signal);\n        setCast(credits.cast);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n        toast.error('Oops, something went wrong');\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return cast?.length > 0 ? (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <List>\n        {cast.map(({ cast_id, name, character, profile_path }) => (\n          <Item key={cast_id}>\n            <Thumb>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `https://via.placeholder.com/150x150.png?text=No+photo`\n                }\n                alt={name}\n              />\n            </Thumb>\n            <Wrapper>\n              <Title>{name}</Title>\n              <SubTitle>{character}</SubTitle>\n            </Wrapper>\n          </Item>\n        ))}\n      </List>\n    </>\n  ) : (\n    <p>We don`t have cast for this movie</p>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b60c32a6f6f2663f6a35c755ff35b4cc';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const searchMovie = async (query, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal,\n    }\n  );\n  return response.data;\n};\n"],"names":["List","styled","Item","Thumb","Wrapper","Title","SubTitle","useState","cast","setCast","movieId","useParams","useEffect","controller","AbortController","signal","fetchData","getMovieCredits","credits","name","toast","abort","length","position","reverseOrder","map","cast_id","character","profile_path","src","alt","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getMovieDetails","searchMovie","query","getMovieReviews"],"sourceRoot":""}